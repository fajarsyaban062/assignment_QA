{
  "keywordFileContentHash": "4D7F421DB931093956A2502BC3B43A1A",
  "keywordClasses": [
    {
      "name": "api_automation.refactor_qa_assignment",
      "keywordMethods": [
        {
          "name": "verifyUserListPageIsValid",
          "parameters": [
            {
              "name": "pageNumber",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [TC-01, TC-02]\r\n\t * Memverifikasi halaman list user yang valid.\r\n\t * @param pageNumber Nomor halaman yang akan diuji.\r\n\t */"
        },
        {
          "name": "verifyUserListDefaultsToPageOne",
          "parameters": [],
          "javadoc": "/**\r\n\t * [TC-03]\r\n\t * Memverifikasi bahwa endpoint default ke halaman 1 jika tidak ada parameter.\r\n\t */"
        },
        {
          "name": "verifyUserListPageNotFound",
          "parameters": [
            {
              "name": "pageNumber",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [TC-04]\r\n\t * Memverifikasi halaman yang tidak ada (di luar jangkauan).\r\n\t * ReqRes mengembalikan 200 OK dengan data kosong.\r\n\t */"
        },
        {
          "name": "verifyUserListHandlesInvalidPageParam",
          "parameters": [
            {
              "name": "invalidPage",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [TC-05, TC-06]\r\n\t * Memverifikasi parameter halaman yang tidak valid (string, 0, negatif).\r\n\t * ReqRes mengabaikannya dan default ke halaman 1.\r\n\t */"
        },
        {
          "name": "verifyUserPropertyListPageIsValid",
          "parameters": [
            {
              "name": "pageNumber",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [TC-07]\r\n\t * Memverifikasi format dan exist data.\r\n\t */"
        },
        {
          "name": "verifyResponseHeadersAndPerformance",
          "parameters": [
            {
              "name": "maxResponseTimeMs",
              "initialExpression": "",
              "type": {
                "fullClassName": "long",
                "unresolvedClassName": "long",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [TC-08, TC-09]\r\n\t * Memverifikasi header dan waktu respons.\r\n\t */"
        },
        {
          "name": "verifyDisallowedMethods",
          "parameters": [],
          "javadoc": "/**\r\n\t * [TC-10]\r\n\t * Memverifikasi metode HTTP yang tidak diizinkan.\r\n\t * API yang baik harus mengembalikan 405. ReqRes mungkin mengembalikan 404.\r\n\t */"
        },
        {
          "name": "verifyUserExistsOnPage",
          "parameters": [
            {
              "name": "pageNumber",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "attribute",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "expectedValue",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.Object",
                "unresolvedClassName": "java.lang.Object",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\r\n\t * [GUL-11]\r\n\t * Memverifikasi/mencari seorang user spesifik di dalam data list halaman.\r\n\t * @param pageNumber Halaman yang akan di-GET\r\n\t * @param attribute Kunci JSON yang akan dicari (e.g., \"email\", \"id\", \"first_name\")\r\n\t * @param expectedValue Nilai yang diharapkan untuk atribut tersebut\r\n\t */"
        }
      ]
    }
  ],
  "javadocParsed": true
}